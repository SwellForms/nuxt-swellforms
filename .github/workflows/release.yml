# This workflow automates versioning and publishing to npm.
# It triggers on every push to the 'main' branch.

name: Release and Publish to NPM

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Build, Version, and Publish
    runs-on: ubuntu-latest
    # Grant permissions for the action to create a release and push tags
    permissions:
      contents: write

    steps:
      # 1. Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch all history and tags for the versioning action to work correctly
          fetch-depth: 0

      # 2. Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org' # Set the registry for publishing
          cache: 'npm'

      # 3. Install dependencies
      - name: Install dependencies
        run: npm ci

      # 4. Prepare Nuxt types for the build process (FIX ADDED HERE)
      - name: Prepare Nuxt types
        run: npx nuxi prepare playground

      # 5. Run linting and tests to ensure code quality
      - name: Run Lint and Tests
        run: |
          npm run lint
          npm run test

      # 6. Build the module for production
      - name: Build Module
        run: npm run prepack

      # 7. Bump version based on conventional commits and create a tag
      - name: Bump version and create tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Use conventional commit messages to determine the version bump.
          default_bump: "patch" # If no special commit message is found, default to a patch.

      # 8. Publish the new version to the npm registry
      - name: Publish to NPM
        run: npm publish --access public
        env:
          # The NODE_AUTH_TOKEN is a secret that allows the action to authenticate with NPM.
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # 9. Create a GitHub Release from the new tag
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          # Use the tag created in the previous step
          tag: ${{ steps.tag_version.outputs.new_tag }}
          # Use the changelog generated by the tag action as the release body
          body: ${{ steps.tag_version.outputs.changelog }}
